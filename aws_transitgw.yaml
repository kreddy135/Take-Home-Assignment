AWSTemplateFormatVersion: '2010-09-10'
Description: >-
  Creates a transit gateway two VPCs each with two private subnets and routes
  for each subnet to the TGW. A security group permitting all traffic to/from
  the MgmtVPC is created and an SG that permits inbound traffic from MgmtVPC to
  DevVPC is also created. MgmtVPC would have all of the necessary monitoring
  and management tools. DevVPC is a model of just one of many possible DevVPC.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC and Transit Gateway configuration parameters
        Parameters:
          - MgmtVPCCIDR
          - MgmtVPCSubnet1CIDR
          - MgmtVPCSubnet2CIDR
          - DevVPCCIDR
          - DevVPCSubnet1CIDR
          - DevVPCSubnet2CIDR
          - TransitGatewayASN
          - TransitGatewayRoute
    ParameterLabels:
      TransitGatewayRoute:
        default: >-
          Enter the CIDR that contains ALL VPCs that can be routed through the
          Transit Gateway (probably a /16)
      TransitGatewayASN:
        default: Enter the ASN of the transit gateway
      MgmtVPCCIDR:
        default: Enter CIDR of management VPC
      MgmtVPCSubnet1CIDR:
        default: Enter CIDR of the first private subnet in the management VPC
      MgmtVPCSubnet2CIDR:
        default: Enter CIDR of the second private subnet in the management VPC
      DevVPCCIDR:
        default: Enter the CIDR of the Dev VPC
      DevVPCSubnet1CIDR:
        default: Enter the CIDR of the first private subnet in the Dev VPC
      DevVPCSubnet2CIDR:
        default: Enter the CIDR of the second private subnet in the Dev VPC
      
Parameters:
  TransitGatewayRoute:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.0.0/16
    Description: CIDR block for address range that contains ALL VPCs.
    Type: String
  MgmtVPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.0.0/17
    Description: CIDR block for Management VPC
    Type: String
  DevVPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.128.0/17
    Description: CIDR block for Dev VPC
    Type: String
  ProdVPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.16.0.0/17
    Description: CIDR block for Prod VPC
    Type: String
  MgmtVPCSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.0.0/24
    Description: CIDR block for the first management VPC subnet
    Type: String
  MgmtVPCSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.1.0/24
    Description: CIDR block for the second management VPC subnet
    Type: String
  DevVPCSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.128.0/24
    Description: CIDR block for the first private subnet in the Dev VPC
    Type: String
  DevVPCSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.129.0/24
    Description: CIDR block for the second private subnet in the Dev VPC
    Type: String
  ProdVPCSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.16.1.0/24
    Description: CIDR block for the first private subnet in the Prod VPC
    Type: String
  ProdVPCSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.16.0.0/24
    Description: CIDR block for the second private subnet in the Prod VPC
    Type: String
  TransitGatewayASN:
    Default: '64612'
    ConstraintDescription: Must be an integer between 64512 and 65534
    Description: The ASN for the AWS Transit Gateway
    Type: Number
    MinValue: '64512'
    MaxValue: '65534'
################ IAM user parameters
  Password:
    Type: String
    Description: Please enter a password
    ConstraintDescription: Password must be between 8 and 32 characters, start with lowercase or uppercase letter, and can be alphanumeric with the following special characters !@#$%&
    NoEcho: true
    AllowedPattern: ^[a-zA-Z][a-zA-Z0-9!@#$%&]{8,32}$
    Default: "karthik1234"
  Path:
    Type: String
    Description: What IAM Path would you like to associate with the User?
    AllowedPattern: (^\/$)|(^\/.*\/$)
    Default: "/"

Mappings:
  RegionMap:
    "ap-south-1":
      AMI: "ami-00796998f258969fd"
      SSM: "com.amazonaws.ap-south-1.ssm"
    "eu-west-3":
      AMI: "ami-04992646d54c69ef4"
      SSM: "com.amazonaws.eu-west-3.ssm"
    "eu-west-2":
      AMI: "ami-00ee3b59e07408c27"
      SSM: "com.amazonaws.eu-west-2.ssm"
    "eu-west-1":
      AMI: "ami-09693313102a30b2c"
      SSM: "com.amazonaws.eu-west-1.ssm"
    "ap-northeast-3":
      AMI: "ami-00f7ef6bf92e8f916"
    "ap-northeast-2":
      AMI: "ami-012566705322e9a8e"
    "ap-northeast-1":
      AMI: "ami-00f9d04b3b3092052"
    "sa-east-1":
      AMI: "ami-0112d42866980b373"
    "ca-central-1":
      AMI: "ami-05cac140c6a1fb960"
      SSM: "com.amazonaws.ca-central-1.ssm"
    "ap-southeast-1":
      AMI: "ami-01da99628f381e50a"
      SSM: "com.amazonaws.ap-southeast-1.ssm"
    "ap-southeast-2":
      AMI: "ami-00e17d1165b9dd3ec"
      SSM: "com.amazonaws.ap-southeast-2.ssm"
    "eu-central-1":
      AMI: "ami-02ea8f348fa28c108"
      SSM: "com.amazonaws.eu-central-1.ssm"
    "us-east-1":
      AMI: "ami-009d6802948d06e52"
      SSM: "com.amazonaws.us-east-1.ssm"
      SSMM: "com.amazonaws.us-east-1.ssmmessages"
    "us-east-2":
      AMI: "ami-02e680c4540db351e"
      SSM: "com.amazonaws.us-east-2.ssm"
      SSMM: "com.amazonaws.us-east-2.ssmmessages"
    "us-west-1":
      AMI: "ami-011b6930a81cd6aaf"
      SSM: "com.amazonaws.us-west-1.ssm"
      SSMM: "com.amazonaws.us-west-1.ssmmessages"
    "us-west-2":
      AMI: "ami-01bbe152bf19d0289"
      SSM: "com.amazonaws.us-west-2.ssm"

Resources:
  TransitGateway:
    Type: AWS::EC2::TransitGateway
    Properties:
      AmazonSideAsn:
        Ref: TransitGatewayASN
      Description: VPC transit gateway
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: enable
      DnsSupport: enable
      VpnEcmpSupport: enable
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - TransitGateway-
                - Ref: TransitGatewayASN
  MgmtVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: MgmtVPCCIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPC-
                - Ref: MgmtVPCCIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
    DependsOn: TransitGateway
  MgmtVPCTGWAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - Ref: MgmtVPCSubnet1
        - Ref: MgmtVPCSubnet2
      TransitGatewayId:
        Ref: TransitGateway
      VpcId:
        Ref: MgmtVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCAttachment-
                - Ref: MgmtVPCCIDR
  MgmtVPCSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MgmtVPC
      CidrBlock:
        Ref: MgmtVPCSubnet1CIDR
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCSubnet1-
                - Ref: MgmtVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  MgmtVPCSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MgmtVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCSubnet1RouteTable-
                - Ref: MgmtVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  MgmtVPCSubnet1TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: MgmtVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: MgmtVPCSubnet1RouteTable
      DestinationCidrBlock:
        Ref: TransitGatewayRoute
      TransitGatewayId:
        Ref: TransitGateway
  MgmtSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: MgmtVPCSubnet1
      RouteTableId:
        Ref: MgmtVPCSubnet1RouteTable
  MgmtVPCSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MgmtVPC
      CidrBlock:
        Ref: MgmtVPCSubnet2CIDR
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCSubnet2-
                - Ref: MgmtVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  MgmtVPCSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MgmtVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCSubnet2RouteTable-
                - Ref: MgmtVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  MgmtVPCSubnet2TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: MgmtVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: MgmtVPCSubnet2RouteTable
      DestinationCidrBlock:
        Ref: TransitGatewayRoute
      TransitGatewayId:
        Ref: TransitGateway
  MgmtSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: MgmtVPCSubnet2
      RouteTableId:
        Ref: MgmtVPCSubnet2RouteTable
  MgmtVPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: MgmtVPC
      GroupDescription: Allow all traffic to TGW-connected VPCs
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: TransitGatewayRoute
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: TransitGatewayRoute
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - MgmtVPCSecurityGroup-
                - Ref: MgmtVPC
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
##### Dev VPC
  DevVPC:
    Type: AWS::EC2::VPC
    DependsOn: TransitGateway
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: DevVPCCIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPC-
                - Ref: DevVPCCIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  DevVPCTGWAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - Ref: DevVPCSubnet1
        - Ref: DevVPCSubnet2
      TransitGatewayId:
        Ref: TransitGateway
      VpcId:
        Ref: DevVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevAttachment-
                - Ref: DevVPCCIDR
  DevVPCSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: DevVPC
      CidrBlock:
        Ref: DevVPCSubnet1CIDR
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPCSubnet1-
                - Ref: DevVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  DevVPCSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DevVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPCSubnet1RouteTable-
                - Ref: DevVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  DevVPCSubnet1TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: DevVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: DevVPCSubnet1RouteTable
      DestinationCidrBlock:
        Ref: MgmtVPCSubnet1CIDR
      TransitGatewayId:
        Ref: TransitGateway
  DevSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DevVPCSubnet1
      RouteTableId:
        Ref: DevVPCSubnet1RouteTable
  DevVPCSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: DevVPC
      CidrBlock:
        Ref: DevVPCSubnet2CIDR
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPCSubnet2-
                - Ref: DevVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  DevVPCSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: DevVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPCSubnet2RouteTable-
                - Ref: DevVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  DevVPCSubnet2TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: DevVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: DevVPCSubnet2RouteTable
      DestinationCidrBlock:
        Ref: MgmtVPCSubnet1CIDR
      TransitGatewayId:
        Ref: TransitGateway
  DevSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DevVPCSubnet2
      RouteTableId:
        Ref: DevVPCSubnet2RouteTable
  
  DevVPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: DevVPC
      GroupDescription: Allow all traffic to MgmtVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: MgmtVPCCIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: MgmtVPCSubnet1CIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - DevVPCSecurityGroup-
                - Ref: DevVPC
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
##### PROD VPC
  ProdVPC:
    Type: AWS::EC2::VPC
    DependsOn: TransitGateway
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: ProdVPCCIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPC-
                - Ref: ProdVPCCIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  ProdVPCTGWAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - Ref: ProdVPCSubnet1
        - Ref: ProdVPCSubnet2
      TransitGatewayId:
        Ref: TransitGateway
      VpcId:
        Ref: ProdVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdAttachment-
                - Ref: ProdVPCCIDR
  ProdVPCSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ProdVPC
      CidrBlock:
        Ref: ProdVPCSubnet1CIDR
      AvailabilityZone:
        Fn::Select:
          - '1'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPCSubnet1-
                - Ref: ProdVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  ProdVPCSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ProdVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPCSubnet1RouteTable-
                - Ref: ProdVPCSubnet1CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  ProdVPCSubnet1TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: ProdVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: ProdVPCSubnet1RouteTable
      DestinationCidrBlock:
        Ref: MgmtVPCSubnet1CIDR
      TransitGatewayId:
        Ref: TransitGateway
  ProdSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ProdVPCSubnet1
      RouteTableId:
        Ref: ProdVPCSubnet1RouteTable
  ProdVPCSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: ProdVPC
      CidrBlock:
        Ref: ProdVPCSubnet2CIDR
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPCSubnet2-
                - Ref: ProdVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  ProdVPCSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: ProdVPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPCSubnet2RouteTable-
                - Ref: ProdVPCSubnet2CIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  ProdVPCSubnet2TGWRoute:
    Type: AWS::EC2::Route
    DependsOn: ProdVPCTGWAttachment
    Properties:
      RouteTableId:
        Ref: ProdVPCSubnet2RouteTable
      DestinationCidrBlock:
        Ref: MgmtVPCSubnet1CIDR
      TransitGatewayId:
        Ref: TransitGateway
  ProdSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ProdVPCSubnet2
      RouteTableId:
        Ref: ProdVPCSubnet2RouteTable
  ProdVPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: ProdVPC
      GroupDescription: Allow all traffic to MgmtVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: MgmtVPCCIDR
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '1024'
          CidrIp:
            Ref: MgmtVPCSubnet1CIDR
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - ProdVPCSecurityGroup-
                - Ref: ProdVPC
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
######## EC2 creation dev vpc
  ServerRoleDCS1:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", [DCS1, Ref: "AWS::StackName", "SSMRole"]]
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
        - "arn:aws:iam::aws:policy/IAMReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  InstanceProfileDCS1:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref ServerRoleDCS1

  DCS1Ec2SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for ICMP and SSH from 10.x.x.x
      GroupName: !Join ["-", [DCS1, Ref: "AWS::StackName", "EC2-sec-group"]]
      VpcId:
        Ref: DevVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          CidrIp: !Ref DevVPCCIDR
          FromPort: "-1"
          ToPort: "-1"
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref DevVPCCIDR

  ServerEc2DCS1:
    Type: AWS::EC2::Instance
    DependsOn: DevVPCSubnet1
    Properties:
      SubnetId:
        Ref: DevVPCSubnet1
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: t2.micro
      SecurityGroupIds:
        - Ref: DCS1Ec2SecGroup
      IamInstanceProfile:
        Ref: InstanceProfileDCS1
      Tags:
        - Key: Name
          Value: !Sub "DCS1-${AWS::StackName}-Server"
############ USER WITH EC2 PERMISSION
  DevVPCUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  DevUserGroup:
    Type: AWS::IAM::Group
  DevAdminGroup:
    Type: AWS::IAM::Group
  Users:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'DevUserGroup'
      Users: [!Ref 'DevVPCUser']
  Admins:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'DevAdminGroup'
      Users: [!Ref 'DevVPCUser']
  DevUserPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DevUsers
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
            - s3:*
            - cloudwatch:*
            - ec2:DescribeInstances
            - ec2:DescribeImages
            - ec2:DescribeTags 
            - ec2:DescribeSnapshots
          Resource: '*'
      Groups: [!Ref 'DevUserGroup']
  DevAdminPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DevAdmins
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: EC2:*
          Resource: '*'
      Groups: [!Ref 'DevAdminGroup']
  DevKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'DevVPCUser'
########### NAT GATEWAY Dev vpc
  DevInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ["-", [Dev, "AWS::StackName", IGW]]

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: DevVPC
      InternetGatewayId:
        Ref: DevInternetGateway
  NAT:
    DependsOn: AttachGateway 
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - EIP
          - AllocationId
        SubnetId:
          Ref: DevVPCSubnet2
        Tags:
        - Key: stack
          Value: Dev
  EIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
  Route:
    DependsOn: DevInternetGateway
    Type: AWS::EC2::Route
    Properties:
        RouteTableId:
          Ref: DevVPCSubnet1RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId:
          Ref: NAT

Outputs:
  TransitGateway:
    Description: Transit Gateway
    Value:
      Ref: TransitGateway
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TransitGateway
  MgmtVPCTGWAttachment:
    Description: Attachment ID of management VPC to Transit Gateway
    Value:
      Ref: MgmtVPCTGWAttachment
  MgmtVPCID:
    Description: VPCID of the management VPC
    Value:
      Ref: MgmtVPC
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MgmtVPC
  MgmtVPCSubnet1:
    Description: SubnetId of the first subnet in the management VPC
    Value:
      Ref: MgmtVPCSubnet1
  MgmtVPCSubnet1RouteTable:
    Description: Route table ID of the first subnet in the management VPC
    Value:
      Ref: MgmtVPCSubnet1RouteTable
  MgmtVPCSubnet2:
    Description: SubnetId of the second subnet in the management VPC
    Value:
      Ref: MgmtVPCSubnet2
  MgmtVPCSubnet2RouteTable:
    Description: Route table ID of the second subnet in the management VPC
    Value:
      Ref: MgmtVPCSubnet2RouteTable
  DevVPCID:
    Description: VPCID of the Dev VPC
    Value:
      Ref: DevVPC
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DevVPC
  DevVPCSubnet1:
    Description: SubnetId of the first subnet in the Dev VPC
    Value:
      Ref: DevVPCSubnet1
  DevVPCSubnet1RouteTable:
    Description: Route table ID of the first subnet in the Dev VPC
    Value:
      Ref: DevVPCSubnet1RouteTable
  DevVPCSubnet2:
    Description: SubnetId of the second subnet in the Dev VPC
    Value:
      Ref: DevVPCSubnet2
  DevVPCSubnet2RouteTable:
    Description: Route table ID of the second subnet in the Dev VPC
    Value:
      Ref: DevVPCSubnet2RouteTable
#######
  ProdVPCID:
    Description: VPCID of the Prod VPC
    Value:
      Ref: ProdVPC
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ProdVPC
  ProdVPCSubnet1:
    Description: SubnetId of the first subnet in the Prod VPC
    Value:
      Ref: ProdVPCSubnet1
  Prod1VPCSubnet1RouteTable:
    Description: Route table ID of the first subnet in the Prod VPC
    Value:
      Ref: ProdVPCSubnet1RouteTable
  ProdVPCSubnet2:
    Description: SubnetId of the second subnet in the Prod VPC
    Value:
      Ref: ProdVPCSubnet2
  ProdVPCSubnet2RouteTable:
    Description: Route table ID of the second subnet in the Prod VPC
    Value:
      Ref: ProdVPCSubnet2RouteTable
